[
  {
    "path": "posts/2021-01-25-dataviz-makeover-1/",
    "title": "DataViz Makeover 1",
    "description": "Due 28 Jan 2021, 2359h.",
    "author": [
      {
        "name": "Cheryl Pay",
        "url": {}
      }
    ],
    "date": "2021-01-28",
    "categories": [],
    "contents": "\nA. Critic\nA critic of the following data visualization is provided.\nExcerpt and chart taken from Page 22 of Report: Labour Force in Singapore 2019Clarity\nC1. Trends in the first four sentences of the statement are not apparent in the visualization. In particular, the age groups aged 55 and above and aged 25 to 54 are not clearly shown in the visualization.\nC2. The years in between 2009 and 2019 are missed out; only 2009 and 2019 are shown.\nC3. Y-axis is missing from the visualization.\nC4. No lead in or callouts to provide context.\nC5. Title and caption of visualization is misleading; Per Cent is inaccurate.\nC6. LFPR is used in the statement, without stating what LFPR stands for.\nC7. LFPR trends are not shown in the chart.\nAesthetics\nA1. Poor color choice of gray and blue used.\nA2. Y-axis labels are cramped.\nA3. Poor positioning of Source and Note, with less than one line space between them and no spacing below Note.\nIn this hands-on exercise, you will learn how to plot data visualisation for visualising correlation matrix with R. It consists of three main sections. First, you will learn how to create correlation matrix using pairs() of R Graphics. Next, you will learn how to plot corrgram using corrplot package of R Lastly, you will learn how to create an interactive correlation matrix using plotly R. .\nB. Alternative Graphical Representation - Sketch\nWith reference to A. Critic, an alternative representation is sketched below.\ninsert sketch here\nTwo charts, with chart title, are added. (C5)\nChart 1: Labour force participation rate\nChart 2: Proportion of labour force\nIn both charts, data points range every year from 2009 to 2019 (instead of showing only 2009 and 2019). (C4)\nData is grouped into three and four age groups in Chart 1 and Chart 2 respectively. (C1)\nChart 1 is a line chart that shows the labour force participation rate (LFPR) by age group by year. This will reflect the trends in LFPR, in particular the sustained increase in LFPR for the cohorts aged 55 and above. (C1, C7)\n65 and above years\n55 - 64 years\n25 - 54 years\n15 - 24 years\n\nChart 2 is an area chart that shows three age groups and their proportion of the labour force each year. This chart serves to reflect the increase in proportion of residents aged 55 and over in the labour force over the years. (C1)\n55+ years\n25 - 54 years\n15 - 24 years\n\nIn Chart 2, the values for proportion of labour force of each age group, in 2009 and 2019, are labelled to emphasis the trend as described in the statement. (C1,C4)\nEach line and area is clearly labelled. (C1, C2)\nColour palette, Tableau 10, is chosen to differentiate the age groups clearly; instead of grey-blue colour for 2009 and 2019 respectively. (A1)\nY-axis with minimum 0% and maximum 100% are shown on both charts. (C3)\nX-axis labels and x-axis title, are comfortably spaced i.e. not cramped on both charts. (A2)\nSource is positioned two line spaces below the x-axes; Source is also aligned left and in different front from x-axis labels (for differentiation). (A3)\nLabour force participating rate is stated in the statement to reflect what LFPR stands for. (C6)\nMedian working age in 2019 and 2009 are shown in a callout on Chart 2. (C1)\nNext, you will use the code chunk below to install and launch corrplot, ggpubr, plotly and tidyverse in RStudio.\n\n\npackages = c('ggpubr', 'tidyverse')\n\nfor(p in packages){library\n  if(!require(p, character.only = T)){\n    install.packages(p)\n  }\n  library(p, character.only = T)\n}\n\n\n\nC. Proposed Data Visualization - Tableau\ninsert tableau visualization here\nD. Step-by-Step Guide for Creating the Visualization\nD.1 Preparing the data in excel\nFirst, we download the following two tables from Table: Labour Force 2019.\nTable (5): Resident Labour Force Participation Rate by Age and Sex, 2009 - 2019 (June)\nTable (7): Resident Labour Force Aged Fifteen Years and Over by Age and Sex, 2009 – 2019 (June)\n\nFrom the data in Table 5, copy and paste the labour force participation rates of the following age groups, from years 2009 to 2019, onto another excel file. You should have three columns with 44 observations. Save file as data_LFPR.xlsx to use as your data source for Tableau.\nAge Groups\n15 - 24\n25 - 54\n55 - 64\n65 & Over\nData Columns\nColumn A: Year\nColumn B: Age Group\nColumn C: Labour Force Participating Rate\n\n\nFrom the data in Table 7, we need to calculate proportion of resident labour force of each age group, by year, in percent.\n\n\nProportion = number of residents in each age group each year divided by the total number of residents in the same year\n\n\n\nDo the same for every year and every age group. Copy and paste the values calculated onto another excel file. You should have the following three columns with 133 observations. Save file as data_labour_force.xlsx to use as your data source for Tableau\nData Columns\nColumn A: Year\nColumn B: Age (Years)\nColumn C: Percentage\n\n\nD.2 Creating the line chart on Tableau\nLoad Tableau and click on Microsoft Excel from the taskbar on the left. Select the file: data_lfpr.xlsx that you have created previously. Click Open.\nClick on Abc of Year. From the dropdown, select Date. Then, go to Sheet 1.\n\nFrom the Data pane, drag Year to Columns, drag Labour Force Participation Rate to Rows, and drag Age Group to Color (in the Marks pane).\nTo show all markers for each line, click on color in the Marks pane and set Markers to all i.e. the icon showing a line with markers.\n\nFrom Columns, click on the dropdown arrow from YEAR(Year)and select Year as shown in the screenshot below.\n\nDouble click on the chart title and change it to Labour Force Participation Rate. Double click on the x-axis and change Title from Year of Year to Year. Double click on the y-axis and remove the Title. Set Range to Fixed start = 0, Fixed end = 100.\nRight click the y-axis and select Format. On theleft pane, go to Scale > Numbersand select Number(Custom). Set decimal places to 0 and suffix to %.\n\nTo label each line with the age group, drag Age Group from the Data pane to Label in the Marks pane. In the Marks pane, click on Label and update the following attributes.\nText: <Age Group> years\nFont: Tableau Bold, 10pt, Match Mark Color\n\nFrom the legend, click the drop-down arrow and go to EditColors. Set the colors of each age group according to the screenshot below. The color for 65 & Over is a darker shade from the color for 55 - 64. Click OK.\n\nThe line chart: Labour Force Participation Rate is ready.\n\nD.3 Creating the stacked area chart on Tableau\nCreate a new Worksheet in the same Tableau file. Using the top menu bar, select Data > New Data Source. Connect to data_labour_force.xlsx.\nClick on Abc of Year. From the dropdown, select Date.\nGo to Sheet 2 from the tabs at the bottom of your window. In the Data pane, right-click Age (Years) and select Create > Group.\n\nIn the Create Group dialog box, select the age groups 55 and above, then click Group. Rename the group to 55+ years. Do the same for the other two groups - 25-54 years and Below 25 years.\n\nGroup naming must be consistent with the line chart in D.2 Creating the line chart on Tableau.\n\n\n\nFirst, let us import the data into R by using read_csv() of readr package.\nNotice that beside quality and type, the rest of the variables are numerical and continuous data type.\nE. Three Major Observations\nProportion of labour force aged 55 and above is increasing or remain the same every year from 2009 to 2019.\nasdfhjkl\nasdfhjkl\n\n\n\n",
    "preview": "posts/2021-01-25-dataviz-makeover-1/images/00.jpg",
    "last_modified": "2021-01-27T10:31:11+08:00",
    "input_file": "dataviz-makeover-1.utf8.md"
  },
  {
    "path": "posts/2021-01-05-my-first-post/",
    "title": "Hands-on_Distill.Rmd from Prof Kam",
    "description": "Example .Rmd file provided by Prof Kam for ISSS608 Visual Analytics",
    "author": [
      {
        "name": "Prof Kam Tim Seong",
        "url": {}
      }
    ],
    "date": "2021-01-04",
    "categories": [],
    "contents": "\n1.0 Overview\nCorrelation coefficient is a popular statistic that use to measure the type and strength of the relationship between two variables. The values of a correlation coefficient ranges between -1.0 and 1.0. A correlation coefficient of 1 shows a perfect linear relationship between the two variables, while a -1.0 shows a perfect inverse relationship between the two variables. A correlation coeficient of 0.0 shows no linear relationship between the two variables.\nWhen multivariate data are used, the correlation coeficeints of the pair comparisons are displayed in a table form known as correlation matrix or scatterplot matrix.\nThere are three broad reasons for computing a correlation matrix.\nTo reveal the relationship between highdimensional variables pairwisely.\nTo input into other analyses. For example, people commonly use correlation matrixes as inputs for exploratory factor analysis, confirmatory factor analysis, structural equation models, and linear regression when excluding missing values pairwise.\nAs a diagnostic when checking other analyses. For example, with linear regression a high amount of correlations suggests that the linear regression’s estimates will be unreliable.\nWhen the data is large, both in terms of the number of observations and the number of variables, Corrgram tend to be used to visually explore and analyse the structure and the patterns of relations among variables. It is designed based on two main schemes:\nRendering the value of a correlation to depict its sign and magnitude, and\nReordering the variables in a correlation matrix so that “similar” variables are positioned adjacently, facilitating perception.\nIn this hands-on exercise, you will learn how to plot data visualisation for visualising correlation matrix with R. It consists of three main sections. First, you will learn how to create correlation matrix using pairs() of R Graphics. Next, you will learn how to plot corrgram using corrplot package of R Lastly, you will learn how to create an interactive correlation matrix using plotly R. .\n2.0 Installing and Launching R Packages\nBefore you get started, you are required:\nto start a new R project, and\nto create a new R Markdown document.\nNext, you will use the code chunk below to install and launch corrplot, ggpubr, plotly and tidyverse in RStudio.\n\n\npackages = c('ggpubr', 'tidyverse')\n\nfor(p in packages){library\n  if(!require(p, character.only = T)){\n    install.packages(p)\n  }\n  library(p, character.only = T)\n}\n\n\n\n3.0 Importing and Preparing The Data Set\nIn this hands-on exercise, the Wine Quality Data Set of UCI Machine Learning Repository will be used. The data set consists of 13 variables and 6497 observations. For the purpose of this exercise, we have combined the red wine and white wine data into one data file. It is called wine_quality and is in csv file format.\n3.1 Importing Data\nFirst, let us import the data into R by using read_csv() of readr package.\n\n\nwine <- read_csv(\"data/wine_quality.csv\")\n\n\n\nNotice that beside quality and type, the rest of the variables are numerical and continuous data type.\n4.0 Univariate EDA with Histogram\nIn the figure below, multiple histograms are plottted to reveal the distribution of the selected variables in the wine quality data sets.\n\n\n\nThe code chunks used to create the data visualisation consists of two main parts. First, we will create the individual histograms using the code chunk below.\n\n\nfa <- ggplot(data=wine, aes(x= `fixed acidity`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nva <- ggplot(data=wine, aes(x= `volatile acidity`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nca <- ggplot(data=wine, aes(x= `citric acid`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nrs <- ggplot(data=wine, aes(x= `residual sugar`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nch <- ggplot(data=wine, aes(x= `chlorides`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nfSO2 <- ggplot(data=wine, aes(x= `free sulfur dioxide`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\ntSO2 <- ggplot(data=wine, aes(x= `total sulfur dioxide`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\ndensity <- ggplot(data=wine, aes(x= density)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\npH <- ggplot(data=wine, aes(x= pH)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nsulphates <- ggplot(data=wine, aes(x= sulphates)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\nalcohol <- ggplot(data=wine, aes(x= alcohol)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\nNext, the ggarrange function of ggpur package is used to group these histograms together.\n\n\nggarrange(fa, va, ca, rs, ch, fSO2, tSO2, density, pH, sulphates, alcohol, \n          ncol = 4, nrow = 3)\n\n\n\n\n\n\n",
    "preview": "posts/2021-01-05-my-first-post/my-first-post_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2021-01-25T11:52:20+08:00",
    "input_file": "my-first-post.utf8.md"
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to IDEA",
    "description": "Welcome to our new blog, IDEA. We hope you enjoy \nreading what we have to say!",
    "author": [
      {
        "name": "Cheryl Pay",
        "url": "https://linkedin.com/in/cherylpay"
      }
    ],
    "date": "2021-01-04",
    "categories": [],
    "contents": "\n\n\n\n",
    "preview": {},
    "last_modified": "2021-01-05T17:43:52+08:00",
    "input_file": "welcome.utf8.md"
  }
]
